name: Build and Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main, devel ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: ptp-trace
            asset_name: ptp-trace-linux-x86_64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: ptp-trace
            asset_name: ptp-trace-linux-aarch64
          - os: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
            artifact_name: ptp-trace
            asset_name: ptp-trace-linux-armv7
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: ptp-trace.exe
            asset_name: ptp-trace-windows-x86_64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: ptp-trace
            asset_name: ptp-trace-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: ptp-trace
            asset_name: ptp-trace-macos-aarch64

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        override: true
        profile: minimal

    - name: Install cross-compilation dependencies (Linux ARM64)
      if: matrix.target == 'aarch64-unknown-linux-gnu'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu

    - name: Install cross-compilation dependencies (Linux ARM32)
      if: matrix.target == 'armv7-unknown-linux-gnueabihf'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-arm-linux-gnueabihf

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        use-cross: ${{ matrix.target == 'aarch64-unknown-linux-gnu' || matrix.target == 'armv7-unknown-linux-gnueabihf' }}
        command: build
        args: --release --target ${{ matrix.target }}

    - name: Strip binary (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        if [[ "${{ matrix.target }}" == "aarch64-unknown-linux-gnu" ]]; then
          aarch64-linux-gnu-strip target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
        elif [[ "${{ matrix.target }}" == "armv7-unknown-linux-gnueabihf" ]]; then
          arm-linux-gnueabihf-strip target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
        else
          strip target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Display structure of downloaded files
      run: ls -la artifacts/

    - name: Create ZIP archives
      run: |
        cd artifacts
        zip -r ptp-trace-linux-x86_64.zip ptp-trace-linux-x86_64/
        zip -r ptp-trace-linux-aarch64.zip ptp-trace-linux-aarch64/
        zip -r ptp-trace-linux-armv7.zip ptp-trace-linux-armv7/
        zip -r ptp-trace-windows-x86_64.zip ptp-trace-windows-x86_64.exe/
        zip -r ptp-trace-macos-x86_64.zip ptp-trace-macos-x86_64/
        zip -r ptp-trace-macos-aarch64.zip ptp-trace-macos-aarch64/
        ls -la *.zip

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/ptp-trace-linux-x86_64.zip
          artifacts/ptp-trace-linux-aarch64.zip
          artifacts/ptp-trace-linux-armv7.zip
          artifacts/ptp-trace-windows-x86_64.zip
          artifacts/ptp-trace-macos-x86_64.zip
          artifacts/ptp-trace-macos-aarch64.zip
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
